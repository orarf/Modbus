#include <Arduino.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "freertos/semphr.h"

SemaphoreHandle_t xMutex;  // ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Mutex

void Task1(void *pvParameters) {
  while (1) {
    // ‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡πá‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô
    if (xSemaphoreTake(xMutex, portMAX_DELAY)) {
      Serial.println("üëâ Task1: ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô");
      delay(100);  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
      Serial.println("‚úÖ Task1: ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß\n");
      xSemaphoreGive(xMutex);  // ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏•‡πá‡∏≠‡∏Å
    }
    vTaskDelay(1000 / portTICK_PERIOD_MS);  // ‡∏£‡∏≠ 500ms ‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡πÉ‡∏´‡∏°‡πà
  }
}

void Task2(void *pvParameters) {
  while (1) {
    if (xSemaphoreTake(xMutex, portMAX_DELAY)) {
      Serial.println("üëâ Task2: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô");
      delay(100);  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
      Serial.println("‚úÖ Task2: ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à\n");
      xSemaphoreGive(xMutex);
    }
    vTaskDelay(2000 / portTICK_PERIOD_MS);  // ‡∏£‡∏≠ 700ms
  }
}

void setup() {
  Serial.begin(9600);
  delay(1000);  // ‡∏£‡∏≠ Serial ‡∏û‡∏£‡πâ‡∏≠‡∏°

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Mutex
  xMutex = xSemaphoreCreateMutex();

  if (xMutex != NULL) {
    Serial.println("üéØ ‡∏™‡∏£‡πâ‡∏≤‡∏á Mutex ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Task 2 ‡∏ï‡∏±‡∏ß
  xTaskCreate(Task1, "Task1", 2048, NULL, 1, NULL);
  xTaskCreate(Task2, "Task2", 2048, NULL, 1, NULL);
}

void loop() {
  // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
}
